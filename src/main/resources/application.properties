# This json file should encapsulate the list of Providers that the API supports
list.providers.file = /etc/pidmr/conf.d/providers.conf

%test.list.providers.file = providers.conf

# This json file should encapsulate the list of Metaresolvers that the API supports
list.metaresolvers.file = /etc/pidmr/conf.d/metaresolvers.conf

%test.list.metaresolvers.file = metaresolvers.conf

# This json file should encapsulate the list of Actions that the PID supports
list.actions.file = /etc/pidmr/conf.d/actions.conf

%test.list.actions.file = actions.conf


# Specifies that each entry should be automatically removed from the cache once a fixed duration has elapsed after the entry's creation, the most recent replacement of its value, or its last read.
quarkus.cache.caffeine."partition".expire-after-access=24H
quarkus.cache.caffeine."metaresolvers".expire-after-access=24H
quarkus.cache.caffeine."providers".expire-after-access=24H
quarkus.cache.caffeine."providersToMap".expire-after-access=24H
quarkus.cache.caffeine."actions".expire-after-access=24H
quarkus.cache.caffeine."pidMode".expire-after-access=24H

# open api
quarkus.smallrye-openapi.path=/open-api

# swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# CORS filter
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

quarkus.smallrye-openapi.info-title= PID Meta Resolver - PIDMR-API
quarkus.smallrye-openapi.info-version=1.0.1
quarkus.smallrye-openapi.info-description=PID Meta Resolver: The PID Meta Resolver is a generalized resolver for mapping items into records. Actually the  PID Meta Resolver will  know where to route different types of identifier – ex. DOI, URN:NBN.  PID Meta Resolver which should improve machine based data processing and allows to get digital object information without in-depth knowledge of the resolution mechanism of different PID systems. That enhances the collection and analysis of data collections originating not only from different sources also referenced by different PID systems. The PID Meta Resolver should return a minimal set of information. This creates the connection with the PID Kernel Information. 
quarkus.smallrye-openapi.info-terms-of-service=Your terms here
quarkus.smallrye-openapi.info-contact-email=info@einfra.grnet.gr
quarkus.smallrye-openapi.info-contact-name=GRNET eINFRA Development Team
#quarkus.smallrye-openapi.info-contact-url=https://pidmr.devel.argo.grnet.gr/
quarkus.smallrye-openapi.info-license-name=Apache 2.0
quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html

proxy.resolve.mode.url = http://hdl.handle.net/
proxy.resolve.mode.url.append.param = ?
proxy.resolve.mode.body.attribute = hdl
proxy.resolve.mode.body.attribute.prefix = 21.T11973/MR@

# datasource production configuration

quarkus.datasource.db-kind=mysql
%prod.quarkus.datasource.username=root
%prod.quarkus.datasource.password=secret
%prod.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/pidmr

# datasource development configuration

%dev.quarkus.datasource.devservices.port=3306
%dev.quarkus.datasource.devservices.db-name=pidmr
%dev.quarkus.datasource.devservices.username=pidmr
%dev.quarkus.datasource.devservices.password=pidmr
%dev.quarkus.hibernate-orm.log.sql=true

# flyway
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=1.0
%prod.quarkus.flyway.schemas=pidmr

# The server URL that acts on behalf of the Cat Service
server.url=${SERVER_URL:http://localhost:8080}
